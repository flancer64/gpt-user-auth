{
  "openapi": "3.1.0",
  "info": {
    "title": "GPT User Authentication API",
    "description": "API for user registration, authentication, and profile management in TeqFW applications integrated with ChatGPT.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://SET.YOUR.SERVER.HERE/"
    }
  ],
  "paths": {
    "/web-api-service/Fl64_Gpt_User_Shared_Web_Api_SignUp_Init": {
      "post": {
        "summary": "Initialize user sign-up",
        "description": "Starts the user sign-up process by collecting the user's email, consent for data processing, preferred locale, and passphrase. It creates a user record with a 'pending verification' status, generates a unique PIN, and sends an email verification token. The PIN and passphrase must be securely stored by the client for future authentication.",
        "operationId": "userSignUpInit",
        "requestBody": {
          "description": "Data required to initialize the user sign-up process. The email will be used for communication and account verification. Consent must be set to `true` to proceed. The passphrase is used as a personal authentication token alongside the PIN.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address used for account verification and communication. It must be in a valid email format and only include the address part.",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "isConsent": {
                    "type": "boolean",
                    "description": "A flag indicating whether the user has agreed to data processing. This must be set to `true`. Sending `false` will result in an invalid request.",
                    "example": true
                  },
                  "locale": {
                    "type": "string",
                    "description": "The user's preferred locale for application interaction, formatted according to BCP 47. Determines the language and format of the user interface.",
                    "example": "en-US"
                  },
                  "passPhrase": {
                    "type": "string",
                    "description": "A secret passphrase chosen by the user. It serves as an authentication token along with the PIN. Passphrases must be meaningful, easy to pronounce, and suitable for voice interfaces.",
                    "minLength": 8,
                    "maxLength": 128,
                    "example": "sunny day morning"
                  }
                },
                "required": ["email", "isConsent", "passPhrase"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The sign-up process was initiated successfully. The response includes the user's PIN (inactive until email verification is completed) and instructions for the next steps.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "string",
                      "enum": [
                        "CONSENT_REQUIRED",
                        "EMAIL_ALREADY_REGISTERED",
                        "SERVER_ERROR",
                        "SUCCESS"
                      ],
                      "description": "Indicates the outcome of the registration initiation. Possible values are: CONSENT_REQUIRED (consent not provided), EMAIL_ALREADY_REGISTERED (email already in use), SERVER_ERROR (an internal issue), SUCCESS (registration initiated)."
                    },
                    "pin": {
                      "type": "integer",
                      "description": "A unique numeric PIN assigned to the user during registration. This PIN remains inactive until the user's email is verified and is required for future authentication along with the passphrase.",
                      "example": 123456
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Next-step instructions for the user to complete their registration. The instructions are translated into the user's preferred language.",
                      "example": "Please verify your email address by clicking the link we sent to your email."
                    }
                  },
                  "required": ["resultCode", "pin", "instructions"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. An unexpected issue occurred while processing the request. The user should retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "A message indicating that the service is temporarily unavailable.",
                      "example": "Service unavailable. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web-api-service/Fl64_Gpt_User_Shared_Web_Api_Test_Email": {
      "post": {
        "summary": "Send a message to the user's registered email",
        "description": "Allows sending a message to the email registered with the user's account. Requires the user's PIN, passphrase for authentication, and an optional message and subject for the email.",
        "operationId": "sendEmail",
        "requestBody": {
          "description": "Data required to send an email to the registered user.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "integer",
                    "description": "The user's unique PIN for authentication."
                  },
                  "passPhrase": {
                    "type": "string",
                    "description": "The user's secret passphrase for authentication."
                  },
                  "subject": {
                    "type": "string",
                    "description": "The subject of the email. This field is optional and can be empty."
                  },
                  "message": {
                    "type": "string",
                    "description": "The body of the email. This field is optional and can be empty."
                  }
                },
                "required": ["pin", "passPhrase"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email was sent successfully or failed with an appropriate error message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resultCode": {
                      "type": "string",
                      "enum": [
                        "UNAUTHENTICATED",
                        "SERVICE_ERROR",
                        "SUCCESS"
                      ],
                      "description": "Indicates the result of the operation. Possible values are: UNAUTHENTICATED, SERVICE_ERROR, SUCCESS."
                    },
                    "message": {
                      "type": "string",
                      "description": "A detailed message describing the result of the operation."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. An unexpected issue occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "A general error message indicating that the service is temporarily unavailable."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web-api-service/Fl64_Gpt_User_Shared_Web_Api_Update_Init": {
      "post": {
        "summary": "Initiate Profile Editing Process",
        "description": "Initiates the profile editing process by validating the provided email or PIN and sending a link for profile editing to the user's email. Requires a Bearer token in the Authorization header, formatted as a UUID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address associated with the user's account. This is the primary identifier used for initiating the profile editing process. If found, an email with a profile editing link is sent to this address.",
                    "example": "user@example.com"
                  },
                  "pin": {
                    "type": "integer",
                    "description": "A unique PIN assigned to the user during registration. This serves as a fallback identifier for the profile editing process. If an email lookup fails, the service will attempt to find the user by PIN.",
                    "example": 123456
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The profile editing process was successfully initiated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instructions": {
                      "type": "string",
                      "description": "A human-readable message describing the outcome of the profile editing initiation process. This message confirms whether the profile editing link was sent to the user's email or if no user was found.",
                      "example": "If the user provided valid credentials, a link to update the profile has been sent to their email."
                    },
                    "resultCode": {
                      "type": "string",
                      "description": "A code indicating the result of the profile editing initiation operation. This can be used programmatically to determine success or failure.",
                      "enum": ["SERVER_ERROR", "SUCCESS"],
                      "example": "SUCCESS"
                    }
                  },
                  "required": ["instructions", "resultCode"]
                }
              }
            }
          },
          "403": {
            "description": "The request is forbidden due to missing or invalid Bearer token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A human-readable message indicating that the request was not authorized due to missing or invalid Bearer token.",
                      "example": "Authorization failed: Bearer token is missing or invalid."
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error occurred during the profile editing initiation process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instructions": {
                      "type": "string",
                      "description": "A human-readable message indicating that an error occurred during the process. This informs the user or application to retry the operation later.",
                      "example": "An unexpected server error occurred. Please try again later."
                    },
                    "resultCode": {
                      "type": "string",
                      "description": "A code indicating that a server error occurred. This allows the application to programmatically recognize the failure and take appropriate actions.",
                      "enum": ["SERVER_ERROR"],
                      "example": "SERVER_ERROR"
                    }
                  },
                  "required": ["instructions", "resultCode"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "UUID",
        "description": "Authentication token provided as a Bearer token in the Authorization header. The token itself is a UUID. Example: 'Bearer 7d4c7311-82e4-4c67-bc5e-8а7d01c8ddec'."
      }
    }
  }
}
