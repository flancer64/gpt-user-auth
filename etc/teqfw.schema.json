{
  "package": {
    "fl64": {
      "package": {
        "gpt": {
          "entity": {
            "token": {
              "comment": "Registry of one-time tokens for various user activities (e.g., email verification, password reset).",
              "attr": {
                "user_ref": {
                  "type": "ref",
                  "comment": "Reference to the GPT user for whom this token is generated."
                },
                "code": {
                  "type": "string",
                  "comment": "One-time code generated for the specified activity."
                },
                "type": {
                  "type": "string",
                  "comment": "Type of activity for which the token is generated, defined at the project level."
                },
                "date_created": {
                  "type": "datetime",
                  "comment": "Date and time when the token was generated.",
                  "default": "current"
                }
              },
              "index": {
                "pk": {
                  "type": "primary",
                  "attrs": ["code"]
                }
              },
              "relation": {
                "user": {
                  "attrs": ["user_ref"],
                  "ref": {
                    "path": "/user",
                    "attrs": ["id"]
                  },
                  "action": {
                    "delete": "cascade",
                    "update": "cascade"
                  }
                }
              }
            },
            "user": {
              "comment": "Registry of users authenticated through ChatGPT.",
              "attr": {
                "user_ref": {
                  "type": "ref",
                  "comment": "Reference to the app user."
                },
                "pin": {
                  "type": "integer",
                  "comment": "PIN code stored as an integer; formatting (e.g., number of digits, numeral system) is managed by the application."
                },
                "pass_hash": {
                  "type": "string",
                  "comment": "Hash of the passphrase used for user confirmation."
                },
                "pass_salt": {
                  "type": "string",
                  "comment": "Salt used in hashing the passphrase for added security."
                },
                "email": {
                  "type": "string",
                  "comment": "User's email address stored in lowercase; only the address itself (e.g., user@mail.com)."
                },
                "locale": {
                  "type": "string",
                  "comment": "User's preferred locale for interactions with the application (e.g., es-ES).",
                  "default": "en"
                },
                "status": {
                  "type": "enum",
                  "comment": "Status of the user account for GPT authentication.",
                  "options": {
                    "values": ["UNVERIFIED", "ACTIVE", "BLOCKED"]
                  },
                  "default": "UNVERIFIED"
                },
                "date_created": {
                  "type": "datetime",
                  "comment": "Date and time when the GPT user record was created.",
                  "default": "current"
                }
              },
              "index": {
                "email": {"type": "unique", "attrs": ["email"]},
                "pin": {"type": "unique", "attrs": ["pin"]},
                "user": {"type": "unique", "attrs": ["user_ref"]}
              },
              "relation": {
                "user": {
                  "attrs": ["user_ref"],
                  "ref": {"path": "/user", "attrs": ["id"]},
                  "action": {"delete": "cascade", "update": "cascade"}
                }
              }
            }
          },
          "package": {
            "oauth": {
              "entity": {
                "client": {
                  "comment": "Registry of OAuth2 clients authorized to interact with the application.",
                  "attr": {
                    "id": {"type": "id"},
                    "client_id": {
                      "type": "string",
                      "comment": "Unique identifier for the client, used during authorization."
                    },
                    "client_secret": {
                      "type": "string",
                      "comment": "Secret key assigned to the client for secure communication."
                    },
                    "redirect_uri": {
                      "type": "string",
                      "comment": "Authorized redirect URI for the client."
                    },
                    "name": {
                      "type": "string",
                      "comment": "Human-readable name of the client (e.g., 'My App')."
                    },
                    "status": {
                      "type": "enum",
                      "comment": "Status of the client registration.",
                      "options": {
                        "values": ["ACTIVE", "INACTIVE"]
                      },
                      "default": "ACTIVE"
                    },
                    "date_created": {
                      "type": "datetime",
                      "comment": "Date and time when the client was registered.",
                      "default": "current"
                    }
                  },
                  "index": {
                    "client_id": {
                      "type": "unique",
                      "attrs": ["client_id"]
                    }
                  }
                },
                "code": {
                  "comment": "Registry of OAuth2 authorization codes.",
                  "attr": {
                    "id": {
                      "type": "id",
                      "comment": "Primary key for the authorization codes table."
                    },
                    "code": {
                      "type": "string",
                      "comment": "Generated authorization code."
                    },
                    "client_id": {
                      "type": "ref",
                      "comment": "Reference to the associated client."
                    },
                    "user_id": {
                      "type": "ref",
                      "comment": "Reference to the associated user."
                    },
                    "expires_at": {
                      "type": "datetime",
                      "comment": "Expiration time for the authorization code."
                    },
                    "redirect_uri": {
                      "type": "string",
                      "comment": "Redirect URI provided during authorization."
                    },
                    "scope": {
                      "type": "string",
                      "comment": "Optional scopes granted for the authorization."
                    }
                  },
                  "index": {
                    "code": {
                      "type": "unique",
                      "attrs": ["code"]
                    }
                  },
                  "relation": {
                    "client": {
                      "attrs": ["client_id"],
                      "ref": {
                        "path": "/fl64/gpt/oauth/client",
                        "attrs": ["id"]
                      },
                      "action": {
                        "delete": "cascade",
                        "update": "cascade"
                      }
                    },
                    "user": {
                      "attrs": ["user_id"],
                      "ref": {"path": "/fl64/gpt/user", "attrs": ["user_ref"]},
                      "action": {"delete": "cascade", "update": "cascade"}
                    }
                  }
                },
                "token": {
                  "comment": "Table for storing access and refresh tokens.",
                  "attr": {
                    "id": {"type": "id"},
                    "access_token": {
                      "type": "string",
                      "comment": "Access token for authentication."
                    },
                    "refresh_token": {
                      "type": "string",
                      "comment": "Optional refresh token for renewing access tokens.",
                      "nullable": true
                    },
                    "client_ref": {
                      "type": "ref",
                      "comment": "Reference to the associated client."
                    },
                    "user_ref": {
                      "type": "ref",
                      "comment": "Reference to the associated user."
                    },
                    "date_expire": {
                      "type": "datetime",
                      "comment": "Timestamp for when the access token expires."
                    },
                    "scope": {
                      "type": "string",
                      "comment": "Optional scope defining access permissions.",
                      "nullable": true
                    }
                  },
                  "index": {
                    "access_token": {
                      "type": "unique",
                      "attrs": ["access_token"]
                    }
                  },
                  "relation": {
                    "client": {
                      "attrs": ["client_ref"],
                      "ref": {"path": "/fl64/gpt/oauth/client", "attrs": ["id"]},
                      "action": {"delete": "cascade", "update": "cascade"}
                    },
                    "user": {
                      "attrs": ["user_ref"],
                      "ref": {"path": "/fl64/gpt/user", "attrs": ["user_ref"]},
                      "action": {"delete": "cascade", "update": "cascade"}
                    }
                  }
                }
                }
            },
            "openai": {
              "entity": {
                "user": {
                  "comment": "Registry of OpenAI ephemeral users linked to registered users.",
                  "attr": {
                    "user_ref": {
                      "type": "ref",
                      "comment": "Reference to the app user from the GPT user registry."
                    },
                    "ephemeral_id": {
                      "type": "string",
                      "comment": "Code associated with the OpenAI user for identification or authorization."
                    },
                    "date_created": {
                      "type": "datetime",
                      "comment": "Date and time when the OpenAI user record was created.",
                      "default": "current"
                    },
                    "date_last": {
                      "type": "datetime",
                      "comment": "Date and time of the last interaction or update for this OpenAI user.",
                      "default": "current"
                    }
                  },
                  "index": {
                    "pk": {
                      "type": "primary",
                      "attrs": ["user_ref", "ephemeral_id"]
                    }
                  },
                  "relation": {
                    "user": {
                      "attrs": ["user_ref"],
                      "ref": {
                        "path": "/fl64/gpt/user",
                        "attrs": ["user_ref"]
                      },
                      "action": {"delete": "cascade", "update": "cascade"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "refs": {
    "/user": ["id"]
  }
}
